set -g default-terminal "screen-256color"
set -g status-bg black
set -g status-fg black
set -g pane-border-lines double
set -g pane-border-style fg=white
set -g pane-active-border-style fg=blue
set -g pane-active-border-style bg=blue
set -g window-active-style bg=terminal
set -g window-style bg=terminal
set -g window-status-current-style bg=blue
set -s escape-time 0
set -g mouse on
set -g status-right '#{window_index}:#{pane_index}'
set-option -g history-limit 100000
setw -g mode-keys vi
bind-key -n C-e split-window -h -c '#{pane_current_path}'
bind-key -n C-h split-window -v -c '#{pane_current_path}'
#bind-key -n M-Left select-pane -L
#bind-key -n M-Right select-pane -R
#bind-key -n M-Up select-pane -U
#bind-key -n M-Down select-pane -D
bind-key -n C-x resize-pane -Z
bind-key -n C-t new-window -c '#{pane_current_path}'
bind-key -n M-PageUp select-window -p
bind-key -n M-PageDown select-window -n
bind-key -n C-p paste-buffer
bind-key -n M-Enter copy-mode
bind-key -n C-k clear-history
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# Modified
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"
bind-key -n M-Left if-shell "$is_vim" 'send-keys M-Left' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n M-Down if-shell "$is_vim" 'send-keys M-Down' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n M-Up if-shell "$is_vim" 'send-keys M-Up' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n M-Right if-shell "$is_vim" 'send-keys M-Right' { if -F '#{pane_at_right}' '' 'select-pane -R' }
bind-key -T copy-mode-vi M-Left { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -T copy-mode-vi M-Down { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -T copy-mode-vi M-Up { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -T copy-mode-vi M-Right { if -F '#{pane_at_right}' '' 'select-pane -R' }
